[{"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\App.js":"1","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\index.js":"2","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MenuComponent.js":"4","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\DISHES.js":"5","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\DishDetailComponent.js":"6","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MainComponent.js":"7","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Header.js":"8","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Footer.js":"9","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\HomeComponent.js":"10","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\PROMOTIONS.js":"11","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\COMMENTS.js":"12","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\ContactUs.js":"13","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\LEADERS.js":"14","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Aboutus.js":"15","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\redux\\configureStore.js":"16"},{"size":402,"mtime":1610073733614,"results":"17","hashOfConfig":"18"},{"size":640,"mtime":1609733549214,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609140052886,"results":"20","hashOfConfig":"18"},{"size":1839,"mtime":1609927998499,"results":"21","hashOfConfig":"18"},{"size":1490,"mtime":1609818720182,"results":"22","hashOfConfig":"18"},{"size":2072,"mtime":1610074226500,"results":"23","hashOfConfig":"18"},{"size":2495,"mtime":1610075812856,"results":"24","hashOfConfig":"18"},{"size":6155,"mtime":1610073866975,"results":"25","hashOfConfig":"18"},{"size":2649,"mtime":1609815212092,"results":"26","hashOfConfig":"18"},{"size":1172,"mtime":1609821040383,"results":"27","hashOfConfig":"18"},{"size":445,"mtime":1609818679758,"results":"28","hashOfConfig":"18"},{"size":4280,"mtime":1609818704777,"results":"29","hashOfConfig":"18"},{"size":11974,"mtime":1609923373822,"results":"30","hashOfConfig":"18"},{"size":2382,"mtime":1609818650948,"results":"31","hashOfConfig":"18"},{"size":4284,"mtime":1610075036299,"results":"32","hashOfConfig":"18"},{"size":201,"mtime":1610075578916,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"88hut3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\App.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\index.js",[],["72","73"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MenuComponent.js",["74"],"import React, { Component } from 'react'\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n// Two ways of creating fuctional components  \r\n// 1) function Menu(props)\r\n// {\r\n//     return();\r\n// }\r\n// 2) const Menu = () => {\r\n//     return(\r\n\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\nfunction RenderDishItem({ dish }) {\r\n    return (\r\n        <Link to={`/menu/${dish.id}`} >\r\n            <Card >\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Card>\r\n        </Link>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst MenuComponent = (props) => {\r\n\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n\r\n            // XXXXXXXXXXXXXXXX WRONG WAY THIS WAY DIV WILL LOOSE ITS COL-5 ETC NOT WORKING \r\n            // <div>\r\n            //     <RenderDishItem dish ={dish}  onClick={props.onClick}/>\r\n            // </div>\r\n\r\n            <div key={dish.id} className=\"col-md-5 m-2 col-sm-12\">\r\n                <RenderDishItem dish={dish} />\r\n            </div>\r\n\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-2\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"row mt-1 mb-3\">\r\n                {menu}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MenuComponent\r\n","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\DISHES.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\DishDetailComponent.js",["75"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MainComponent.js",["76"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Header.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Footer.js",[],["77","78"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\HomeComponent.js",["79"],"import React from 'react'\r\nimport reactstrapCjs from 'reactstrap'\r\nimport {Card,CardImg,CardTitle,CardSubtitle,CardBody,CardText} from 'reactstrap'\r\n\r\n\r\nfunction RenderCard({item}) {\r\n\r\n    return(\r\n        <Card>\r\n            <CardImg src={item.image} alt={item.name} />\r\n            <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"container\" >\r\n             <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent;\r\n","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\PROMOTIONS.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\COMMENTS.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\ContactUs.js",["80","81","82"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input,Col ,FormFeedback} from 'reactstrap'\r\n\r\nclass Contact extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            istouched : {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false,\r\n                message: false\r\n            }\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.touchControl = this.touchControl.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    touchControl(event){\r\n        const name = event.target.name;\r\n        console.log(this.state.istouched[name])\r\n        this.setState({\r\n            istouched: { ...this.state.istouched, [name]: true }\r\n        })\r\n    }\r\n\r\n    formvalidation(firstname, lastname, telnum, email, message){\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            email:'',\r\n            telnum :'',\r\n            message:'',\r\n        }\r\n\r\n        if (this.state.istouched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.istouched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.istouched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.istouched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.istouched.telnum && (!reg.test(telnum) || telnum.length != 10))\r\n            errors.telnum = 'Please enter valid telephone number';\r\n\r\n        if(this.state.istouched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n        \r\n        if (this.state.istouched.message && message.length < 10)\r\n            errors.message = 'Message should be >= 10 characters';\r\n        else if (this.state.istouched.message && message.length > 100)\r\n            errors.message = 'Message should be <= 100 characters';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n\r\n        const errors = this.formvalidation(this.state.firstname,this.state.lastname,this.state.telnum, this.state.email, this.state.message);\r\n        console.log(errors.message)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-2\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>ContactUs</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n\r\n                    <div className=\"col-12\">\r\n                        <h3>ContactUs</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            31, Village Baliar Kalan<br />\r\n                          Rewari, Haryana<br />\r\n                          INDIA<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.firstname === '' && this.state.istouched.firstname === true}\r\n                                        invalid={errors.firstname !== ''}/>\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.lastname === '' && this.state.istouched.lastname === true}\r\n                                        invalid={errors.lastname !== ''}/>\r\n                                        <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"number\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        value={this.state.telnum}\r\n                                        onChange={this.handleInputChange} \r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.telnum === '' && this.state.istouched.telnum === true}\r\n                                        invalid={errors.telnum !== ''}/>\r\n                                        <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputChange} \r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.email === '' && this.state.istouched.email === true}\r\n                                        invalid={errors.email !== ''}/>\r\n                                        <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                        value={this.state.contactType}\r\n                                        onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.touchControl}\r\n                                        valid= {errors.message === '' && this.state.istouched.message === true}\r\n                                        invalid={errors.message != ''}/>\r\n                                        <FormFeedback>{errors.message}</FormFeedback>\r\n\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\LEADERS.js",[],["83","84"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Aboutus.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\redux\\configureStore.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"94","line":27,"column":3,"nodeType":"95","messageId":"96","endLine":31,"endColumn":4},{"ruleId":"85","replacedBy":"97"},{"ruleId":"87","replacedBy":"98"},{"ruleId":"89","severity":1,"message":"99","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":79,"column":80,"nodeType":"102","messageId":"103","endLine":79,"endColumn":82},{"ruleId":"104","severity":1,"message":"105","line":131,"column":29,"nodeType":"106","endLine":131,"endColumn":71},{"ruleId":"100","severity":1,"message":"101","line":228,"column":65,"nodeType":"102","messageId":"103","endLine":228,"endColumn":67},{"ruleId":"85","replacedBy":"107"},{"ruleId":"87","replacedBy":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["109"],["110"],"'reactstrapCjs' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["109"],["110"],"no-global-assign","no-unsafe-negation"]