[{"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\App.js":"1","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\index.js":"2","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MenuComponent.js":"4","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\DISHES.js":"5","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\DishDetailComponent.js":"6","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MainComponent.js":"7","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Header.js":"8","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Footer.js":"9","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\HomeComponent.js":"10","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\PROMOTIONS.js":"11","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\COMMENTS.js":"12","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\ContactUs.js":"13","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\LEADERS.js":"14","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Aboutus.js":"15"},{"size":352,"mtime":1609783182593,"results":"16","hashOfConfig":"17"},{"size":640,"mtime":1609733549214,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609140052886,"results":"19","hashOfConfig":"17"},{"size":1839,"mtime":1609927998499,"results":"20","hashOfConfig":"17"},{"size":1490,"mtime":1609818720182,"results":"21","hashOfConfig":"17"},{"size":2047,"mtime":1609840117571,"results":"22","hashOfConfig":"17"},{"size":2545,"mtime":1609846875573,"results":"23","hashOfConfig":"17"},{"size":6116,"mtime":1609930353042,"results":"24","hashOfConfig":"17"},{"size":2649,"mtime":1609815212092,"results":"25","hashOfConfig":"17"},{"size":1172,"mtime":1609821040383,"results":"26","hashOfConfig":"17"},{"size":445,"mtime":1609818679758,"results":"27","hashOfConfig":"17"},{"size":4280,"mtime":1609818704777,"results":"28","hashOfConfig":"17"},{"size":11974,"mtime":1609923373822,"results":"29","hashOfConfig":"17"},{"size":2382,"mtime":1609818650948,"results":"30","hashOfConfig":"17"},{"size":4261,"mtime":1609847514483,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"88hut3",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\App.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\index.js",[],["68","69"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MenuComponent.js",["70"],"import React, { Component } from 'react'\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n// Two ways of creating fuctional components  \r\n// 1) function Menu(props)\r\n// {\r\n//     return();\r\n// }\r\n// 2) const Menu = () => {\r\n//     return(\r\n\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\nfunction RenderDishItem({ dish }) {\r\n    return (\r\n        <Link to={`/menu/${dish.id}`} >\r\n            <Card >\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Card>\r\n        </Link>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst MenuComponent = (props) => {\r\n\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n\r\n            // XXXXXXXXXXXXXXXX WRONG WAY THIS WAY DIV WILL LOOSE ITS COL-5 ETC NOT WORKING \r\n            // <div>\r\n            //     <RenderDishItem dish ={dish}  onClick={props.onClick}/>\r\n            // </div>\r\n\r\n            <div key={dish.id} className=\"col-md-5 m-2 col-sm-12\">\r\n                <RenderDishItem dish={dish} />\r\n            </div>\r\n\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-2\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"row mt-1 mb-3\">\r\n                {menu}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MenuComponent\r\n","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\DISHES.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\DishDetailComponent.js",["71"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\MainComponent.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Header.js",["72"],"import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalBody, ModalHeader, ModalFooter, Form, Label, FormGroup, Input, FormFeedback } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleTouch = this.handleTouch.bind(this);\r\n    this.validateLogin = this.validateLogin.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      istouched: {\r\n        username: false,\r\n        password: false\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleTouch(event) {\r\n    const name = event.target.name;\r\n    this.setState({\r\n      istouched: { ...this.state.istouched, [name]: true }\r\n    })\r\n  }\r\n\r\n  validateLogin(username, password) {\r\n    const error = {\r\n      username: \"\",\r\n      password: \"\"\r\n    }\r\n\r\n    if (username.length < 3 || username.length > 10)\r\n      error.username = \"Username must be between 3 to 10 characters\";\r\n    if (password.length < 3 || password.length > 10)\r\n      error.password = \"Password must be between 3 to 10 characters\";\r\n\r\n    return error;\r\n  }\r\n\r\n  render() {\r\n\r\n    let un = '';\r\n    let ps = '';\r\n    if (this.username !== undefined) {\r\n      un = this.username.value;\r\n    }\r\n    if (this.password !== undefined) {\r\n      ps = this.password.value;\r\n    }\r\n    const error = this.validateLogin(un, ps);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/home'>\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/aboutus'>\r\n                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n              </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/menu'>\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n              </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/contactus'>\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n              </NavLink>\r\n                </NavItem>\r\n\r\n\r\n              </Nav>\r\n\r\n\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n\r\n\r\n\r\n\r\n            </Collapse>\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n            <ModalHeader toogle={this.toogleModal}>Modal title</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"Username\">UserName</Label>\r\n                  <Input type=\"text\" name=\"username\" id=\"Username\" placeholder=\"username\"\r\n                    onBlur={this.handleTouch}\r\n                    valid={this.state.istouched.username && error.username === ''}\r\n                    invalid={this.state.istouched.username && error.username !== ''}\r\n                    innerRef={(input) => this.username = input} />\r\n                  <FormFeedback>{error.username}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"password\">Password</Label>\r\n                  <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\"\r\n                    onBlur={this.handleTouch}\r\n                    valid={this.state.istouched.password && error.password === ''}\r\n                    invalid={this.state.istouched.password && error.password !== ''}\r\n                    innerRef={(input) => this.password = input} />\r\n                  <FormFeedback>{error.password}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />{' '}\r\n                            Remember Me\r\n                          </Label>\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>{' '}\r\n                <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n              </Form>\r\n\r\n\r\n            </ModalBody>\r\n\r\n          </Modal>\r\n\r\n\r\n\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Footer.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\HomeComponent.js",["73"],"import React from 'react'\r\nimport reactstrapCjs from 'reactstrap'\r\nimport {Card,CardImg,CardTitle,CardSubtitle,CardBody,CardText} from 'reactstrap'\r\n\r\n\r\nfunction RenderCard({item}) {\r\n\r\n    return(\r\n        <Card>\r\n            <CardImg src={item.image} alt={item.name} />\r\n            <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction HomeComponent(props) {\r\n    return (\r\n        <div className=\"container\" >\r\n             <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent;\r\n",["74","75"],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\PROMOTIONS.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\COMMENTS.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\ContactUs.js",["76","77","78"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input,Col ,FormFeedback} from 'reactstrap'\r\n\r\nclass Contact extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            istouched : {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false,\r\n                message: false\r\n            }\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.touchControl = this.touchControl.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    touchControl(event){\r\n        const name = event.target.name;\r\n        console.log(this.state.istouched[name])\r\n        this.setState({\r\n            istouched: { ...this.state.istouched, [name]: true }\r\n        })\r\n    }\r\n\r\n    formvalidation(firstname, lastname, telnum, email, message){\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            email:'',\r\n            telnum :'',\r\n            message:'',\r\n        }\r\n\r\n        if (this.state.istouched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.istouched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.istouched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.istouched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.istouched.telnum && (!reg.test(telnum) || telnum.length != 10))\r\n            errors.telnum = 'Please enter valid telephone number';\r\n\r\n        if(this.state.istouched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n        \r\n        if (this.state.istouched.message && message.length < 10)\r\n            errors.message = 'Message should be >= 10 characters';\r\n        else if (this.state.istouched.message && message.length > 100)\r\n            errors.message = 'Message should be <= 100 characters';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n\r\n        const errors = this.formvalidation(this.state.firstname,this.state.lastname,this.state.telnum, this.state.email, this.state.message);\r\n        console.log(errors.message)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-2\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>ContactUs</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n\r\n                    <div className=\"col-12\">\r\n                        <h3>ContactUs</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            31, Village Baliar Kalan<br />\r\n                          Rewari, Haryana<br />\r\n                          INDIA<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.firstname === '' && this.state.istouched.firstname === true}\r\n                                        invalid={errors.firstname !== ''}/>\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.lastname === '' && this.state.istouched.lastname === true}\r\n                                        invalid={errors.lastname !== ''}/>\r\n                                        <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"number\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        value={this.state.telnum}\r\n                                        onChange={this.handleInputChange} \r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.telnum === '' && this.state.istouched.telnum === true}\r\n                                        invalid={errors.telnum !== ''}/>\r\n                                        <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleInputChange} \r\n                                        onBlur={this.touchControl}\r\n                                        valid={errors.email === '' && this.state.istouched.email === true}\r\n                                        invalid={errors.email !== ''}/>\r\n                                        <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                        value={this.state.contactType}\r\n                                        onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.touchControl}\r\n                                        valid= {errors.message === '' && this.state.istouched.message === true}\r\n                                        invalid={errors.message != ''}/>\r\n                                        <FormFeedback>{errors.message}</FormFeedback>\r\n\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\shared\\LEADERS.js",[],"C:\\Users\\user\\Desktop\\COURSERA\\react\\confusion\\src\\Components\\Aboutus.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":2,"column":120,"nodeType":"85","messageId":"86","endLine":2,"endColumn":131},{"ruleId":"83","severity":1,"message":"88","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":21},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":79,"column":80,"nodeType":"93","messageId":"94","endLine":79,"endColumn":82},{"ruleId":"95","severity":1,"message":"96","line":131,"column":29,"nodeType":"97","endLine":131,"endColumn":71},{"ruleId":"91","severity":1,"message":"92","line":228,"column":65,"nodeType":"93","messageId":"94","endLine":228,"endColumn":67},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'ModalFooter' is defined but never used.","'reactstrapCjs' is defined but never used.",["98"],["99"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]